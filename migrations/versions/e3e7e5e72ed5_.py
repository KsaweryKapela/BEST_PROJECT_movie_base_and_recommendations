"""empty message

Revision ID: e3e7e5e72ed5
Revises: c178ddb9dd9a
Create Date: 2022-08-06 22:16:16.762098

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e3e7e5e72ed5'
down_revision = 'c178ddb9dd9a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('actors')
    op.drop_table('genres')
    op.drop_table('movie_genres')
    op.drop_table('movie_actors')
    op.drop_table('movie_writers')
    op.drop_table('directors')
    op.drop_table('movie_directors')
    op.drop_table('movies_database')
    op.drop_table('user_movie_actors')
    op.drop_table('users_films')
    op.drop_table('writers')
    op.drop_constraint(None, 'movie_text', type_='foreignkey')
    op.create_foreign_key(None, 'movie_text', 'movie', ['movie_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'movie_text', type_='foreignkey')
    op.create_foreign_key(None, 'movie_text', 'movies_database', ['movie_id'], ['id'])
    op.create_table('writers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_films',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.Column('tag', sa.VARCHAR(length=10), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies_database.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_movie_actors',
    sa.Column('actor_id', sa.INTEGER(), nullable=True),
    sa.Column('user_movie_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['user_movie_id'], ['users_films.id'], )
    )
    op.create_table('movies_database',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=300), nullable=True),
    sa.Column('description', sa.VARCHAR(length=5000), nullable=True),
    sa.Column('genre', sa.VARCHAR(length=3000), nullable=True),
    sa.Column('director', sa.VARCHAR(length=3000), nullable=True),
    sa.Column('writer', sa.VARCHAR(length=3000), nullable=True),
    sa.Column('cast', sa.VARCHAR(length=3000), nullable=True),
    sa.Column('release_date', sa.VARCHAR(length=500), nullable=True),
    sa.Column('studio', sa.VARCHAR(length=3000), nullable=True),
    sa.Column('producer', sa.VARCHAR(length=3000), nullable=True),
    sa.Column('collection', sa.VARCHAR(length=300), nullable=True),
    sa.Column('tomatometer', sa.VARCHAR(length=100), nullable=True),
    sa.Column('critic_reviews_no', sa.VARCHAR(length=100), nullable=True),
    sa.Column('user_score', sa.VARCHAR(length=100), nullable=True),
    sa.Column('user_reviews_no', sa.VARCHAR(length=100), nullable=True),
    sa.Column('certified', sa.VARCHAR(length=100), nullable=True),
    sa.Column('boxoffice', sa.VARCHAR(length=100), nullable=True),
    sa.Column('runtine', sa.VARCHAR(length=100), nullable=True),
    sa.Column('PG', sa.VARCHAR(length=100), nullable=True),
    sa.Column('PG_text', sa.VARCHAR(length=1000), nullable=True),
    sa.Column('img_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('rotten_url', sa.VARCHAR(length=500), nullable=True),
    sa.Column('computed_audience_score', sa.INTEGER(), nullable=True),
    sa.Column('computed_critic_score', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movie_directors',
    sa.Column('director_id', sa.INTEGER(), nullable=True),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['director_id'], ['directors.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies_database.id'], )
    )
    op.create_table('directors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movie_writers',
    sa.Column('writer_id', sa.INTEGER(), nullable=True),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies_database.id'], ),
    sa.ForeignKeyConstraint(['writer_id'], ['writers.id'], )
    )
    op.create_table('movie_actors',
    sa.Column('actor_id', sa.INTEGER(), nullable=True),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies_database.id'], )
    )
    op.create_table('movie_genres',
    sa.Column('genre_id', sa.INTEGER(), nullable=True),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies_database.id'], )
    )
    op.create_table('genres',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###
